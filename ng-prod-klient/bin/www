#!/usr/bin/env node
const express = require("express");
const path = require("path");
const NG_APP_DIR = "ng-app";

const app = express();

app.use(express.static(path.join(__dirname, "..", NG_APP_DIR)));

app.use(function(req, res) {
  res.sendFile(path.join(__dirname, "..", NG_APP_DIR, "index.html"));
});

const http = require("http");

const port = normalizePort("4200");
app.set("port", port);

const server = http.createServer(app);

server.listen(port);
server.on("error", onError);

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  const bind = typeof port === "string"
    ? "Pipe " + port
    : "Port " + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

